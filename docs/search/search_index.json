{
    "docs": [
        {
            "location": "/", 
            "text": "If you are a linux user and unsatisfied with the current theme collection want to create new theme or modify current one then this documentation is for you\n\n\nMany Linux desktops supporting themes. A theme is a particular appearance or \"****\" for the GUI. Users can change the theme to make the desktop look different. Usually, users also change the icons. However, the theme and icon-pack are two separate entities. Numerous people want to make their own theme, so here is an article about making GTK themes as well as various essential information.\n\n\n\n\nNOTE: This article primarily focuses on GTK3, but it will discuss a little about GTK2, Metacity, and others. Cursors and icons will not be discussed in this article.\n\n\nSee the \ngetting started guide\n for instructions how to get\nit up and running.", 
            "title": "Overview"
        }, 
        {
            "location": "/#if-you-are-a-linux-user-and-unsatisfied-with-the-current-theme-collection-want-to-create-new-theme-or-modify-current-one-then-this-documentation-is-for-you", 
            "text": "Many Linux desktops supporting themes. A theme is a particular appearance or \"****\" for the GUI. Users can change the theme to make the desktop look different. Usually, users also change the icons. However, the theme and icon-pack are two separate entities. Numerous people want to make their own theme, so here is an article about making GTK themes as well as various essential information.   NOTE: This article primarily focuses on GTK3, but it will discuss a little about GTK2, Metacity, and others. Cursors and icons will not be discussed in this article.  See the  getting started guide  for instructions how to get\nit up and running.", 
            "title": "If you are a linux user and unsatisfied with the current theme collection want to create new theme or modify current one then this documentation is for you"
        }, 
        {
            "location": "/getting-started/", 
            "text": "Basic Concepts\n\n\nThe GIMP ToolKit (GTK) is a widget-toolkit used to create GUIs on a variety of systems (thus making GTK cross-platform). GTK (http://www.gtk.org/) is commonly and incorrectly thought to stand for \"GNOME ToolKit\", but is actually stands for \"GIMP ToolKit\" because it was first created to design an user interface for GIMP. GTK is an object-oriented toolkit written in C (GTK itself is not a language). GTK is entirely open-source under the LGPL license. GTK is a widely used toolkit for GUIs and many tools are available for GTK.\n\n\nThemes made for GTK will not work in Qt-based applications. A Qt-theme is needed to apply a theme to Qt applications.\n\n\nThe themes use Cascading Style-Sheets (CSS) to generate the theme's appearance. This is the same CSS that web-developers use on web-pages. However, instead of HTML tags being referenced, GTK widgets are specified. It is important that theme developers learn CSS.\n\n\nTheme Location\n\n\n$XDG_CONFIG_HOME/gtk-3.0/gtk.css (typically ~/.config/gtk-3.0/gtk.css)\n\n\n~/.themes/NAME/gtk-3.0/gtk.css \n\n\n$datadir/share/themes/NAME/gtk-3.0/gtk.css (typically\n /usr/share/themes/name/gtk-3.0/gtk.css)\n\n\n\n\nNOTE\n: \"\nNAME\n\" is a placeholder for the name of the current theme.\n\n\nIf there are two themes with the same name, then the one in the user's home folder (~/.themes) will be used. Developers can take advantage of GTK's theme-seeking algorithm by testing new themes in their local home's theme directory.\n\n\nTheme Engines\n\n\nA \"Theme engine\" is a piece of software that changes the look of the GUI's widgets. The engine reads and uses the theme's files to know how the various widgets should be drawn. Some engines come with themes of their own. Each engine has its advantages and disadvantages, and some engines add special properties and features.\n\n\nMany theme-engines can be obtained from the default repositories. Debian-based Linux distros can execute \"apt-get install gtk2-engines-murrine gtk2-engines-pixbuf gtk3-engines-unico\" to install three different engines. Many engines are available for both GTK2 and GTK3. Below is a small list of examples.\n\n\n\n\ngtk2-engines-aurora - Aurora GTK2 engine\n\n\ngtk2-engines-pixbuf - Pixbuf GTK2 engine\n\n\ngtk3-engines-oxygen - Engine port of the Oxygen widget style to GTK\n\n\ngtk3-engines-unico - Unico GTK3 engine\n\n\ngtk3-engines-xfce - GTK3 engine for Xfce", 
            "title": "Getting Started"
        }, 
        {
            "location": "/getting-started/#basic-concepts", 
            "text": "The GIMP ToolKit (GTK) is a widget-toolkit used to create GUIs on a variety of systems (thus making GTK cross-platform). GTK (http://www.gtk.org/) is commonly and incorrectly thought to stand for \"GNOME ToolKit\", but is actually stands for \"GIMP ToolKit\" because it was first created to design an user interface for GIMP. GTK is an object-oriented toolkit written in C (GTK itself is not a language). GTK is entirely open-source under the LGPL license. GTK is a widely used toolkit for GUIs and many tools are available for GTK.  Themes made for GTK will not work in Qt-based applications. A Qt-theme is needed to apply a theme to Qt applications.  The themes use Cascading Style-Sheets (CSS) to generate the theme's appearance. This is the same CSS that web-developers use on web-pages. However, instead of HTML tags being referenced, GTK widgets are specified. It is important that theme developers learn CSS.", 
            "title": "Basic Concepts"
        }, 
        {
            "location": "/getting-started/#theme-location", 
            "text": "$XDG_CONFIG_HOME/gtk-3.0/gtk.css (typically ~/.config/gtk-3.0/gtk.css)\n\n\n~/.themes/NAME/gtk-3.0/gtk.css \n\n\n$datadir/share/themes/NAME/gtk-3.0/gtk.css (typically\n /usr/share/themes/name/gtk-3.0/gtk.css)  NOTE : \" NAME \" is a placeholder for the name of the current theme.  If there are two themes with the same name, then the one in the user's home folder (~/.themes) will be used. Developers can take advantage of GTK's theme-seeking algorithm by testing new themes in their local home's theme directory.", 
            "title": "Theme Location"
        }, 
        {
            "location": "/getting-started/#theme-engines", 
            "text": "A \"Theme engine\" is a piece of software that changes the look of the GUI's widgets. The engine reads and uses the theme's files to know how the various widgets should be drawn. Some engines come with themes of their own. Each engine has its advantages and disadvantages, and some engines add special properties and features.  Many theme-engines can be obtained from the default repositories. Debian-based Linux distros can execute \"apt-get install gtk2-engines-murrine gtk2-engines-pixbuf gtk3-engines-unico\" to install three different engines. Many engines are available for both GTK2 and GTK3. Below is a small list of examples.   gtk2-engines-aurora - Aurora GTK2 engine  gtk2-engines-pixbuf - Pixbuf GTK2 engine  gtk3-engines-oxygen - Engine port of the Oxygen widget style to GTK  gtk3-engines-unico - Unico GTK3 engine  gtk3-engines-xfce - GTK3 engine for Xfce", 
            "title": "Theme Engines"
        }, 
        {
            "location": "/creating-gtk3-themes/", 
            "text": "Creating GTK3 Themes\n\n\nTo create a GTK3 theme, developers can start with an empty file or they can use a pre-existing theme as a template. It may help beginners to start with a pre-existing theme. For instance, a theme can be copied to the user's home folder and then the developer can start editing the files.\n\n\nThe general format for a GTK3 theme is to create a folder named after the theme. Then, create a sub-directory called \"gtk-3.0\" and create a file inside of it named \"gtk.css\". In the \"gtk.css\" file, use CSS code to control how the theme will look. Move the theme to ~/.themes for testing purposes. Use the newly created theme and make changes as necessary. If desired, developers can add additional components to the theme for GTK2, Openbox, Metacity, Unity, etc.\n\n\nTo explain how to create themes, we will study the \"Ambiance\" theme, which is usually found at /usr/share/themes/Ambiance. This directory contains the below listed sub-directories and a file named \"index.theme\".\n\n\n\n\ngtk-2.0\n\n\ngtk-3.0\n\n\nmetacity-1\n\n\nunity\n\n\n\n\n\n\"\nindex.theme\n\" contains metadata (such as the theme's name) and some important settings (such as the button layout). Below is the \"index.theme\" file for \"Ambiance\".\n\n\ncode :\n\n\n[Desktop Entry]\nType=X-GNOME-Metatheme\nName=Ambiance\nComment=Ubuntu Ambiance theme\nEncoding=UTF-8\n\n[X-GNOME-Metatheme]\nGtkTheme=Ambiance\nMetacityTheme=Ambiance\nIconTheme=ubuntu-mono-dark\nCursorTheme=DMZ-White\nButtonLayout=close,minimize,maximize:\nX-Ubuntu-UseOverlayScrollbars=true\n\n\n\n\n\n\nThe \"\ngtk-2.0\n\" directory contains files for GTK2 such as a \"gtkrc\" file and an \"apps\" directory that contains application-specific GTK settings. The \"gtkrc\" file is the main CSS-file for the GTK2 portion of the theme. Below are the contents of /usr/share/themes/Ambiance/gtk-2.0/apps/nautilus.rc\n\n\ncode :\n\n\n# ==============================================================================\n# NAUTILUS SPECIFIC SETTINGS\n# ==============================================================================\n\nstyle \nnautilus_info_pane\n {\n   bg[NORMAL] = @bg_color\n}\n\nwidget_class \n*Nautilus*\nGtkNotebook\n*\nGtkEventBox\n style \nnautilus_info_pane\n\nwidget_class \n*Nautilus*\nGtkButton\n style \nnotebook_button\n\nwidget_class \n*Nautilus*\nGtkButton\n*\nGtkLabel\n style \nnotebook_button\n\n\n\n\n\n\n\nThe \"\ngtk-3.0\n\" directory contains files for GTK3. Instead of \"gtkrc\", GTK3 uses \"gtk.css\" as the main theme file. In the Ambiance theme, the file contains one line - '@import url(\"gtk-main.css\");'. The \"settings.ini\" file contains important theme-wide settings. GTK3 themes use an \"apps\" directory for the same purpose as GTK2. The \"assets\" directory contains images for radio buttons, check-boxes, etc. Below are the contents of /usr/share/themes/Ambiance/gtk-3.0/gtk-main.css\n\n\ncode :\n\n\n/*default color scheme */\n@define-color bg_color #f2f1f0;\n@define-color fg_color #4c4c4c;\n@define-color base_color #ffffff;\n@define-color text_color #3C3C3C;\n@define-color selected_bg_color #f07746;\n@define-color selected_fg_color #ffffff;\n@define-color tooltip_bg_color #000000;\n@define-color tooltip_fg_color #ffffff;\n\n/* misc colors used by gtk+\n *\n * Gtk doesn't currently expand color variables for style properties. Thus,\n * gtk-widgets.css uses literal color names, but includes a comment containing\n * the name of the variable. Please remember to change values there as well\n * when changing one of the variables below.\n */\n@define-color info_fg_color rgb (181, 171, 156);\n@define-color info_bg_color rgb (252, 252, 189);\n@define-color warning_fg_color rgb (173, 120, 41);\n@define-color warning_bg_color rgb (250, 173, 61);\n@define-color question_fg_color rgb (97, 122, 214);\n@define-color question_bg_color rgb (138, 173, 212);\n@define-color error_fg_color rgb (235, 235, 235);\n@define-color error_bg_color rgb (223, 56, 44);\n@define-color link_color @selected_bg_color;\n@define-color success_color #4e9a06;\n@define-color error_color #df382c;\n\n/* theme common colors */\n@define-color button_bg_color shade (@bg_color, 1.02); /*shade (#cdcdcd, 1.08);*/\n@define-color notebook_button_bg_color shade (@bg_color, 1.02);\n@define-color button_insensitive_bg_color mix (@button_bg_color, @bg_color, 0.6);\n@define-color dark_bg_color #3c3b37;\n@define-color dark_fg_color #dfdbd2;\n\n@define-color backdrop_fg_color mix (@bg_color, @fg_color, 0.8);\n@define-color backdrop_text_color mix (@base_color, @text_color, 0.8);\n@define-color backdrop_dark_fg_color mix (@dark_bg_color, @dark_fg_color, 0.75);\n/*@define-color backdrop_dark_bg_color mix (@dark_bg_color, @dark_fg_color, 0.75);*/\n@define-color backdrop_selected_bg_color shade (@bg_color, 0.92);\n@define-color backdrop_selected_fg_color @fg_color;\n\n@define-color focus_color alpha (@selected_bg_color, 0.5);\n@define-color focus_bg_color alpha (@selected_bg_color, 0.1);\n\n@define-color shadow_color alpha(black, 0.5);\n\n@define-color osd_fg_color #eeeeec;\n@define-color osd_bg_color alpha(#202526, 0.7);\n@define-color osd_border_color alpha(black, 0.7);\n\n@import url(\ngtk-widgets-borders.css\n);\n@import url(\ngtk-widgets-assets.css\n);\n@import url(\ngtk-widgets.css\n);\n@import url(\napps/geary.css\n);\n@import url(\napps/unity.css\n);\n@import url(\napps/baobab.css\n);\n@import url(\napps/gedit.css\n);\n@import url(\napps/nautilus.css\n);\n@import url(\napps/gnome-panel.css\n);\n@import url(\napps/gnome-terminal.css\n);\n@import url(\napps/gnome-system-log.css\n);\n@import url(\napps/unity-greeter.css\n);\n@import url(\napps/glade.css\n);\n@import url(\napps/california.css\n);\n@import url(\napps/software-center.css\n);\n@import url(\npublic-colors.css\n);\n\n\n\n\n\n\nThe \"\nmetacity-1\n\" folder contains images that the Metacity window-manager uses for buttons (such as the \"close window\" button). This directory also contains a file named \"metacity-theme-1.xml\" that contain's the theme's metadata (like the developer's name) and styling. However, the Metacity portion of the theme uses XML rather than CSS.\n\n\nThe \"\nunity\n\" directory contains SVG files that Unity uses for buttons. Besides the SVG files, there are no other files in this folder.\n\n\nSome themes may contain other directories. For instance, \"Clearlooks-Phenix\" has a folder named \"\nopenbox-3\n\" and \"\nxfwm4\n\". The \"openbox-3\" folder only contains a \"themerc\" file that declares the settings and appearance (a sample is seen below). The \"xfwm4\" directory contains \n.xpm files, \n.png images (in the \"png\" folder), a \"README\" file, and a \"themerc\" file which contains settings (as seen below).\n\n\n/usr/share/themes/Clearlooks-Phenix/xfwm4/themerc\n\n\n\n\ncode :\n\n\n# Clearlooks XFWM4 by Casey Kirsle\n\nshow_app_icon=true\nactive_text_color=#FFFFFF\ninactive_text_color=#939393\ntitle_shadow_active=frame\ntitle_shadow_inactive=false\nbutton_layout=O|HMC\nbutton_offset=2\nbutton_spacing=2\nfull_width_title=true\nmaximized_offset=0\ntitle_vertical_offset_active=1\ntitle_vertical_offset_inactive=1\n\n\n\n\n/usr/share/themes/Clearlooks-Phenix/openbox-3/themerc\n\n\n!# Clearlooks-Evolving\n!# Clearlooks as it evolves in gnome-git...\n!# Last updated 09/03/10\n\n# Fonts\n# these are really halos, but who cares?\n\n*.font: shadow=n\nwindow.active.label.text.font:shadow=y:shadowtint=30:shadowoffset=1\nwindow.inactive.label.text.font:shadow=y:shadowtint=00:shadowoffset=0\nmenu.items.font:shadow=y:shadowtint=0:shadowoffset=1\n\n!# general stuff\n\nborder.width: 1\npadding.width: 3\npadding.height: 2\nwindow.handle.width: 3\nwindow.client.padding.width: 0\nmenu.overlap: 2\n*.justify: center\n\n!# lets set our damn shadows here, eh?\n\n*.bg.highlight: 50\n*.bg.shadow:  05\n\nwindow.active.title.bg.highlight: 35\nwindow.active.title.bg.shadow:  05\n\nwindow.inactive.title.bg.highlight: 30\nwindow.inactive.title.bg.shadow:  05\n\nwindow.*.grip.bg.highlight: 50\nwindow.*.grip.bg.shadow:  30\n\nwindow.*.handle.bg.highlight: 50\nwindow.*.handle.bg.shadow:  30\n\n!# Menu settings\n\nmenu.border.color: #aaaaaa\nmenu.border.width: 1\n\nmenu.title.bg: solid flat\nmenu.title.bg.color: #E6E7E6\nmenu.title.text.color: #111111\n\nmenu.items.bg: Flat Solid\nmenu.items.bg.color: #ffffff\nmenu.items.text.color: #111111\nmenu.items.disabled.text.color: #aaaaaa\n\nmenu.items.active.bg: Flat Gradient splitvertical border\n\nmenu.items.active.bg.color: #97b8e2\nmenu.items.active.bg.color.splitTo: #a8c5e9\n\nmenu.items.active.bg.colorTo: #91b3de\nmenu.items.active.bg.colorTo.splitTo: #80a7d6\nmenu.items.active.bg.border.color: #4b6e99\nmenu.items.active.text.color: #ffffff\n\nmenu.separator.width: 1\nmenu.separator.padding.width: 0\nmenu.separator.padding.height: 3\nmenu.separator.color: #aaaaaa\n\n!# set handles here and only the once?\n\nwindow.*.handle.bg: Raised solid\nwindow.*.handle.bg.color: #eaebec\n\nwindow.*.grip.bg: Raised solid\nwindow.*.grip.bg.color: #eaebec\n\n!# Active\n\nwindow.*.border.color: #585a5d\n\nwindow.active.title.separator.color: #4e76a8\n\n*.title.bg: Raised Gradient splitvertical\n*.title.bg.color: #8CB0DC\n*.title.bg.color.splitTo: #99BAE3\n*.title.bg.colorTo: #86ABD9\n*.title.bg.colorTo.splitTo: #7AA1D1\n\nwindow.active.label.bg: Parentrelative\nwindow.active.label.text.color: #ffffff\n\nwindow.active.button.*.bg: Flat Gradient splitvertical Border\n\nwindow.active.button.*.bg.color: #92B4DF\nwindow.active.button.*.bg.color.splitTo: #B0CAEB\nwindow.active.button.*.bg.colorTo: #86ABD9\nwindow.active.button.*.bg.colorTo.splitTo: #769FD0\n\nwindow.active.button.*.bg.border.color: #49678B\nwindow.active.button.*.image.color: #F4F5F6\n\nwindow.active.button.hover.bg.color: #b5d3ef\nwindow.active.button.hover.bg.color.splitTo: #b5d3ef\nwindow.active.button.hover.bg.colorTo: #9cbae7\nwindow.active.button.hover.bg.colorTo.splitTo: #8caede\nwindow.active.button.hover.bg.border.color: #4A658C\nwindow.active.button.hover.image.color: #ffffff\n\nwindow.active.button.pressed.bg: Flat solid Border\nwindow.active.button.pressed.bg.color: #7aa1d2\n\nwindow.active.button.hover.bg.border.color: #4A658C\n\n!# inactive\n\n!#window.inactive.border.color: #7e8285\nwindow.inactive.title.separator.color: #96999d\n\nwindow.inactive.title.bg: Raised Gradient splitvertical\nwindow.inactive.title.bg.color: #E3E2E0\nwindow.inactive.title.bg.color.splitTo: #EBEAE9\nwindow.inactive.title.bg.colorTo: #DEDCDA\nwindow.inactive.title.bg.colorTo.splitTo: #D5D3D1\n\nwindow.inactive.label.bg: Parentrelative\nwindow.inactive.label.text.color: #70747d\n\nwindow.inactive.button.*.bg: Flat Gradient splitVertical Border\nwindow.inactive.button.*.bg.color: #ffffff\nwindow.inactive.button.*.bg.color.splitto: #ffffff\nwindow.inactive.button.*.bg.colorTo: #F9F8F8\nwindow.inactive.button.*.bg.colorTo.splitto: #E9E7E6\nwindow.inactive.button.*.bg.border.color: #928F8B\nwindow.inactive.button.*.image.color: #6D6C6C\n\n\n!# osd (pop ups and what not, dock?)\n\nosd.border.width: 1\nosd.border.color:  #aaaaaa\n\nosd.bg: flat border gradient splitvertical\nosd.bg.color: #F0EFEE\nosd.bg.color.splitto: #f5f5f4\nosd.bg.colorTo: #EAEBEC\nosd.bg.colorTo.splitto: #E7E5E4\n\nosd.bg.border.color: #ffffff\n\nosd.active.label.bg: parentrelative\nosd.active.label.bg.color: #efefef\nosd.active.label.bg.border.color: #9c9e9c\nosd.active.label.text.color: #444\n\nosd.inactive.label.bg: parentrelative\nosd.inactive.label.text.color: #70747d\n\n!# yeah whatever, this is fine anyhoo?\nosd.hilight.bg: flat vertical gradient\nosd.hilight.bg.color: #9ebde5\nosd.hilight.bg.colorTo: #749dcf\nosd.unhilight.bg: flat vertical gradient\nosd.unhilight.bg.color: #BABDB6\nosd.unhilight.bg.colorTo: #efefef\n\n\n\n\n\n\nTesting Themes\n\n\nWhen creating themes, it may be helpful to test it and tweak the code to get the desired appearance. Such developers may want to use some type of \"theme-previewer\". Thankfully, some exist.\n\n\n\n\nGTK+ Change Theme - This program can change the GTK theme and allow\n   developers to preview the theme. The program is composed of one\n   window that contains many widgets, thus providing a complete preview\n   for the theme. To install this program, type \"apt-get install\n   gtk-chtheme\".\n\n\nGTK Theme Switch - This program allows users to easily change the\n   user's theme. Be sure to have some applications open to view and test\n   the theme. To install this program, type \"apt-get install\n   gtk-theme-switch\" and type \"gtk-theme-switch2\" in a terminal to run\n   it.\n\n\nLXappearance - This program can change themes, icons, and fonts. PyWF\n\n\nThis is a Python-based alternative to \"The Widget Factory\". PyWF can be obtained at\n   http://gtk-apps.org/content/show.php/PyTWF?content=102024\n\n\nThe Widget Factory - This is an old GTK-previewer. To install this program, type\n   \"apt-get install thewidgetfactory\" and type \"twf\" in a terminal to\n   run it.\n\n\n\n\n\n\nTheme Downloads\n\n\n\n\nCinnamon - http://gnome-look.org/index.php?xcontentmode=104\n\n\nCompiz - http://gnome-look.org/index.php?xcontentmode=102\n\n\nGNOME Shell - http://gnome-look.org/index.php?xcontentmode=191\n\n\nGTK2 - http://gnome-look.org/index.php?xcontentmode=100\n\n\nGTK3 - http://gnome-look.org/index.php?xcontentmode=167\n\n\nKDE/Qt -\n   http://kde-look.org/index.php?xcontentmode=8x9x10x11x12x13x14x15x16\n\n\nLinux Mint Themes -\n   http://linuxmint-art.org/index.php?xcontentmode=9x14x100\n\n\nMetacity - http://gnome-look.org/index.php?xcontentmode=101\n\n\nUbuntu Themes - http://www.ubuntuthemes.org/\n\n\n\n\n\n\nFurther Reading\n\n\n\n\nGraphical User Interface (GUI) Reading Guide -\n   http://www.linux.org/threads/gui-reading-guide.6471/\n\n\nGTK - http://www.linux.org/threads/understanding-gtk.6291/\n\n\nIntroduction to Glade -\n   http://www.linux.org/threads/introduction-to-glade.7142/\n\n\nDesktop Environment vs Window Managers -\n   http://www.linux.org/threads/desktop-environment-vs-window-managers.7802/\n\n\nOfficial GTK+ 3 Reference Manual -\n   https://developer.gnome.org/gtk3/stable/\n\n\nGtkCssProvider -\n   https://developer.gnome.org/gtk3/stable/GtkCssProvider.html", 
            "title": "Creating gtk3 themes"
        }, 
        {
            "location": "/creating-gtk3-themes/#creating-gtk3-themes", 
            "text": "To create a GTK3 theme, developers can start with an empty file or they can use a pre-existing theme as a template. It may help beginners to start with a pre-existing theme. For instance, a theme can be copied to the user's home folder and then the developer can start editing the files.  The general format for a GTK3 theme is to create a folder named after the theme. Then, create a sub-directory called \"gtk-3.0\" and create a file inside of it named \"gtk.css\". In the \"gtk.css\" file, use CSS code to control how the theme will look. Move the theme to ~/.themes for testing purposes. Use the newly created theme and make changes as necessary. If desired, developers can add additional components to the theme for GTK2, Openbox, Metacity, Unity, etc.  To explain how to create themes, we will study the \"Ambiance\" theme, which is usually found at /usr/share/themes/Ambiance. This directory contains the below listed sub-directories and a file named \"index.theme\".   gtk-2.0  gtk-3.0  metacity-1  unity   \n\" index.theme \" contains metadata (such as the theme's name) and some important settings (such as the button layout). Below is the \"index.theme\" file for \"Ambiance\".  code :  [Desktop Entry]\nType=X-GNOME-Metatheme\nName=Ambiance\nComment=Ubuntu Ambiance theme\nEncoding=UTF-8\n\n[X-GNOME-Metatheme]\nGtkTheme=Ambiance\nMetacityTheme=Ambiance\nIconTheme=ubuntu-mono-dark\nCursorTheme=DMZ-White\nButtonLayout=close,minimize,maximize:\nX-Ubuntu-UseOverlayScrollbars=true   The \" gtk-2.0 \" directory contains files for GTK2 such as a \"gtkrc\" file and an \"apps\" directory that contains application-specific GTK settings. The \"gtkrc\" file is the main CSS-file for the GTK2 portion of the theme. Below are the contents of /usr/share/themes/Ambiance/gtk-2.0/apps/nautilus.rc  code :  # ==============================================================================\n# NAUTILUS SPECIFIC SETTINGS\n# ==============================================================================\n\nstyle  nautilus_info_pane  {\n   bg[NORMAL] = @bg_color\n}\n\nwidget_class  *Nautilus* GtkNotebook * GtkEventBox  style  nautilus_info_pane \nwidget_class  *Nautilus* GtkButton  style  notebook_button \nwidget_class  *Nautilus* GtkButton * GtkLabel  style  notebook_button    The \" gtk-3.0 \" directory contains files for GTK3. Instead of \"gtkrc\", GTK3 uses \"gtk.css\" as the main theme file. In the Ambiance theme, the file contains one line - '@import url(\"gtk-main.css\");'. The \"settings.ini\" file contains important theme-wide settings. GTK3 themes use an \"apps\" directory for the same purpose as GTK2. The \"assets\" directory contains images for radio buttons, check-boxes, etc. Below are the contents of /usr/share/themes/Ambiance/gtk-3.0/gtk-main.css  code :  /*default color scheme */\n@define-color bg_color #f2f1f0;\n@define-color fg_color #4c4c4c;\n@define-color base_color #ffffff;\n@define-color text_color #3C3C3C;\n@define-color selected_bg_color #f07746;\n@define-color selected_fg_color #ffffff;\n@define-color tooltip_bg_color #000000;\n@define-color tooltip_fg_color #ffffff;\n\n/* misc colors used by gtk+\n *\n * Gtk doesn't currently expand color variables for style properties. Thus,\n * gtk-widgets.css uses literal color names, but includes a comment containing\n * the name of the variable. Please remember to change values there as well\n * when changing one of the variables below.\n */\n@define-color info_fg_color rgb (181, 171, 156);\n@define-color info_bg_color rgb (252, 252, 189);\n@define-color warning_fg_color rgb (173, 120, 41);\n@define-color warning_bg_color rgb (250, 173, 61);\n@define-color question_fg_color rgb (97, 122, 214);\n@define-color question_bg_color rgb (138, 173, 212);\n@define-color error_fg_color rgb (235, 235, 235);\n@define-color error_bg_color rgb (223, 56, 44);\n@define-color link_color @selected_bg_color;\n@define-color success_color #4e9a06;\n@define-color error_color #df382c;\n\n/* theme common colors */\n@define-color button_bg_color shade (@bg_color, 1.02); /*shade (#cdcdcd, 1.08);*/\n@define-color notebook_button_bg_color shade (@bg_color, 1.02);\n@define-color button_insensitive_bg_color mix (@button_bg_color, @bg_color, 0.6);\n@define-color dark_bg_color #3c3b37;\n@define-color dark_fg_color #dfdbd2;\n\n@define-color backdrop_fg_color mix (@bg_color, @fg_color, 0.8);\n@define-color backdrop_text_color mix (@base_color, @text_color, 0.8);\n@define-color backdrop_dark_fg_color mix (@dark_bg_color, @dark_fg_color, 0.75);\n/*@define-color backdrop_dark_bg_color mix (@dark_bg_color, @dark_fg_color, 0.75);*/\n@define-color backdrop_selected_bg_color shade (@bg_color, 0.92);\n@define-color backdrop_selected_fg_color @fg_color;\n\n@define-color focus_color alpha (@selected_bg_color, 0.5);\n@define-color focus_bg_color alpha (@selected_bg_color, 0.1);\n\n@define-color shadow_color alpha(black, 0.5);\n\n@define-color osd_fg_color #eeeeec;\n@define-color osd_bg_color alpha(#202526, 0.7);\n@define-color osd_border_color alpha(black, 0.7);\n\n@import url( gtk-widgets-borders.css );\n@import url( gtk-widgets-assets.css );\n@import url( gtk-widgets.css );\n@import url( apps/geary.css );\n@import url( apps/unity.css );\n@import url( apps/baobab.css );\n@import url( apps/gedit.css );\n@import url( apps/nautilus.css );\n@import url( apps/gnome-panel.css );\n@import url( apps/gnome-terminal.css );\n@import url( apps/gnome-system-log.css );\n@import url( apps/unity-greeter.css );\n@import url( apps/glade.css );\n@import url( apps/california.css );\n@import url( apps/software-center.css );\n@import url( public-colors.css );   The \" metacity-1 \" folder contains images that the Metacity window-manager uses for buttons (such as the \"close window\" button). This directory also contains a file named \"metacity-theme-1.xml\" that contain's the theme's metadata (like the developer's name) and styling. However, the Metacity portion of the theme uses XML rather than CSS.  The \" unity \" directory contains SVG files that Unity uses for buttons. Besides the SVG files, there are no other files in this folder.  Some themes may contain other directories. For instance, \"Clearlooks-Phenix\" has a folder named \" openbox-3 \" and \" xfwm4 \". The \"openbox-3\" folder only contains a \"themerc\" file that declares the settings and appearance (a sample is seen below). The \"xfwm4\" directory contains  .xpm files,  .png images (in the \"png\" folder), a \"README\" file, and a \"themerc\" file which contains settings (as seen below).  /usr/share/themes/Clearlooks-Phenix/xfwm4/themerc  code :  # Clearlooks XFWM4 by Casey Kirsle\n\nshow_app_icon=true\nactive_text_color=#FFFFFF\ninactive_text_color=#939393\ntitle_shadow_active=frame\ntitle_shadow_inactive=false\nbutton_layout=O|HMC\nbutton_offset=2\nbutton_spacing=2\nfull_width_title=true\nmaximized_offset=0\ntitle_vertical_offset_active=1\ntitle_vertical_offset_inactive=1  /usr/share/themes/Clearlooks-Phenix/openbox-3/themerc  !# Clearlooks-Evolving\n!# Clearlooks as it evolves in gnome-git...\n!# Last updated 09/03/10\n\n# Fonts\n# these are really halos, but who cares?\n\n*.font: shadow=n\nwindow.active.label.text.font:shadow=y:shadowtint=30:shadowoffset=1\nwindow.inactive.label.text.font:shadow=y:shadowtint=00:shadowoffset=0\nmenu.items.font:shadow=y:shadowtint=0:shadowoffset=1\n\n!# general stuff\n\nborder.width: 1\npadding.width: 3\npadding.height: 2\nwindow.handle.width: 3\nwindow.client.padding.width: 0\nmenu.overlap: 2\n*.justify: center\n\n!# lets set our damn shadows here, eh?\n\n*.bg.highlight: 50\n*.bg.shadow:  05\n\nwindow.active.title.bg.highlight: 35\nwindow.active.title.bg.shadow:  05\n\nwindow.inactive.title.bg.highlight: 30\nwindow.inactive.title.bg.shadow:  05\n\nwindow.*.grip.bg.highlight: 50\nwindow.*.grip.bg.shadow:  30\n\nwindow.*.handle.bg.highlight: 50\nwindow.*.handle.bg.shadow:  30\n\n!# Menu settings\n\nmenu.border.color: #aaaaaa\nmenu.border.width: 1\n\nmenu.title.bg: solid flat\nmenu.title.bg.color: #E6E7E6\nmenu.title.text.color: #111111\n\nmenu.items.bg: Flat Solid\nmenu.items.bg.color: #ffffff\nmenu.items.text.color: #111111\nmenu.items.disabled.text.color: #aaaaaa\n\nmenu.items.active.bg: Flat Gradient splitvertical border\n\nmenu.items.active.bg.color: #97b8e2\nmenu.items.active.bg.color.splitTo: #a8c5e9\n\nmenu.items.active.bg.colorTo: #91b3de\nmenu.items.active.bg.colorTo.splitTo: #80a7d6\nmenu.items.active.bg.border.color: #4b6e99\nmenu.items.active.text.color: #ffffff\n\nmenu.separator.width: 1\nmenu.separator.padding.width: 0\nmenu.separator.padding.height: 3\nmenu.separator.color: #aaaaaa\n\n!# set handles here and only the once?\n\nwindow.*.handle.bg: Raised solid\nwindow.*.handle.bg.color: #eaebec\n\nwindow.*.grip.bg: Raised solid\nwindow.*.grip.bg.color: #eaebec\n\n!# Active\n\nwindow.*.border.color: #585a5d\n\nwindow.active.title.separator.color: #4e76a8\n\n*.title.bg: Raised Gradient splitvertical\n*.title.bg.color: #8CB0DC\n*.title.bg.color.splitTo: #99BAE3\n*.title.bg.colorTo: #86ABD9\n*.title.bg.colorTo.splitTo: #7AA1D1\n\nwindow.active.label.bg: Parentrelative\nwindow.active.label.text.color: #ffffff\n\nwindow.active.button.*.bg: Flat Gradient splitvertical Border\n\nwindow.active.button.*.bg.color: #92B4DF\nwindow.active.button.*.bg.color.splitTo: #B0CAEB\nwindow.active.button.*.bg.colorTo: #86ABD9\nwindow.active.button.*.bg.colorTo.splitTo: #769FD0\n\nwindow.active.button.*.bg.border.color: #49678B\nwindow.active.button.*.image.color: #F4F5F6\n\nwindow.active.button.hover.bg.color: #b5d3ef\nwindow.active.button.hover.bg.color.splitTo: #b5d3ef\nwindow.active.button.hover.bg.colorTo: #9cbae7\nwindow.active.button.hover.bg.colorTo.splitTo: #8caede\nwindow.active.button.hover.bg.border.color: #4A658C\nwindow.active.button.hover.image.color: #ffffff\n\nwindow.active.button.pressed.bg: Flat solid Border\nwindow.active.button.pressed.bg.color: #7aa1d2\n\nwindow.active.button.hover.bg.border.color: #4A658C\n\n!# inactive\n\n!#window.inactive.border.color: #7e8285\nwindow.inactive.title.separator.color: #96999d\n\nwindow.inactive.title.bg: Raised Gradient splitvertical\nwindow.inactive.title.bg.color: #E3E2E0\nwindow.inactive.title.bg.color.splitTo: #EBEAE9\nwindow.inactive.title.bg.colorTo: #DEDCDA\nwindow.inactive.title.bg.colorTo.splitTo: #D5D3D1\n\nwindow.inactive.label.bg: Parentrelative\nwindow.inactive.label.text.color: #70747d\n\nwindow.inactive.button.*.bg: Flat Gradient splitVertical Border\nwindow.inactive.button.*.bg.color: #ffffff\nwindow.inactive.button.*.bg.color.splitto: #ffffff\nwindow.inactive.button.*.bg.colorTo: #F9F8F8\nwindow.inactive.button.*.bg.colorTo.splitto: #E9E7E6\nwindow.inactive.button.*.bg.border.color: #928F8B\nwindow.inactive.button.*.image.color: #6D6C6C\n\n\n!# osd (pop ups and what not, dock?)\n\nosd.border.width: 1\nosd.border.color:  #aaaaaa\n\nosd.bg: flat border gradient splitvertical\nosd.bg.color: #F0EFEE\nosd.bg.color.splitto: #f5f5f4\nosd.bg.colorTo: #EAEBEC\nosd.bg.colorTo.splitto: #E7E5E4\n\nosd.bg.border.color: #ffffff\n\nosd.active.label.bg: parentrelative\nosd.active.label.bg.color: #efefef\nosd.active.label.bg.border.color: #9c9e9c\nosd.active.label.text.color: #444\n\nosd.inactive.label.bg: parentrelative\nosd.inactive.label.text.color: #70747d\n\n!# yeah whatever, this is fine anyhoo?\nosd.hilight.bg: flat vertical gradient\nosd.hilight.bg.color: #9ebde5\nosd.hilight.bg.colorTo: #749dcf\nosd.unhilight.bg: flat vertical gradient\nosd.unhilight.bg.color: #BABDB6\nosd.unhilight.bg.colorTo: #efefef", 
            "title": "Creating GTK3 Themes"
        }, 
        {
            "location": "/creating-gtk3-themes/#testing-themes", 
            "text": "When creating themes, it may be helpful to test it and tweak the code to get the desired appearance. Such developers may want to use some type of \"theme-previewer\". Thankfully, some exist.   GTK+ Change Theme - This program can change the GTK theme and allow\n   developers to preview the theme. The program is composed of one\n   window that contains many widgets, thus providing a complete preview\n   for the theme. To install this program, type \"apt-get install\n   gtk-chtheme\".  GTK Theme Switch - This program allows users to easily change the\n   user's theme. Be sure to have some applications open to view and test\n   the theme. To install this program, type \"apt-get install\n   gtk-theme-switch\" and type \"gtk-theme-switch2\" in a terminal to run\n   it.  LXappearance - This program can change themes, icons, and fonts. PyWF  This is a Python-based alternative to \"The Widget Factory\". PyWF can be obtained at\n   http://gtk-apps.org/content/show.php/PyTWF?content=102024  The Widget Factory - This is an old GTK-previewer. To install this program, type\n   \"apt-get install thewidgetfactory\" and type \"twf\" in a terminal to\n   run it.", 
            "title": "Testing Themes"
        }, 
        {
            "location": "/creating-gtk3-themes/#theme-downloads", 
            "text": "Cinnamon - http://gnome-look.org/index.php?xcontentmode=104  Compiz - http://gnome-look.org/index.php?xcontentmode=102  GNOME Shell - http://gnome-look.org/index.php?xcontentmode=191  GTK2 - http://gnome-look.org/index.php?xcontentmode=100  GTK3 - http://gnome-look.org/index.php?xcontentmode=167  KDE/Qt -\n   http://kde-look.org/index.php?xcontentmode=8x9x10x11x12x13x14x15x16  Linux Mint Themes -\n   http://linuxmint-art.org/index.php?xcontentmode=9x14x100  Metacity - http://gnome-look.org/index.php?xcontentmode=101  Ubuntu Themes - http://www.ubuntuthemes.org/", 
            "title": "Theme Downloads"
        }, 
        {
            "location": "/creating-gtk3-themes/#further-reading", 
            "text": "Graphical User Interface (GUI) Reading Guide -\n   http://www.linux.org/threads/gui-reading-guide.6471/  GTK - http://www.linux.org/threads/understanding-gtk.6291/  Introduction to Glade -\n   http://www.linux.org/threads/introduction-to-glade.7142/  Desktop Environment vs Window Managers -\n   http://www.linux.org/threads/desktop-environment-vs-window-managers.7802/  Official GTK+ 3 Reference Manual -\n   https://developer.gnome.org/gtk3/stable/  GtkCssProvider -\n   https://developer.gnome.org/gtk3/stable/GtkCssProvider.html", 
            "title": "Further Reading"
        }, 
        {
            "location": "/creating-icon-theme/", 
            "text": "Creating Icon Theme\n\n\nNot only can Linux users customize the desktop theme, but they can also change the icons. Icon-theme packs are easy to make, install, and obtain. Many Linux users may find it helpful to learn how to change icons, edit them, get more, etc.\n\n\nIcon Location\n\n\nIcons may be stored in \"~/.icons\" or \"/usr/share/icons\". Icons that are in \"~/.icons\" are only accessible to the owner of that home folder. While icons in \"/usr/share/icons\" are global-icons that are accessible by all users. \"/usr/share/pixmaps\" contains icons that are installed or used by various applications and software packages.\n\n\nIcon Searching\n\n\nApplications that are looking for an icon will first look in \"~/.icons\". Next, the application will try \"/usr/share/icons\", and then \"/usr/share/pixmaps\".\n\n\nIcon Theme\n\n\nAn icon theme has a specific structure/format that must be used to create a usable icon-pack. Inside the icon directories (\"~/.icons\" and \"/usr/share/icons\"), each icon theme has its own folder that is named after the icon-theme. Within the icon-theme's directory are several folders and some important files. For instance, an icon-theme may contain the below listed directories and files.\nDirectories\n\n\n\n\n8x8\n\n\n16x16\n\n\n22x22\n\n\n24x24\n\n\n32x32\n\n\n48x48\n\n\n52x52\n\n\n128x128\n\n\n240x240\n\n\n256x256\n\n\n512x512\n\n\nscalable\n\n\nscalable-up-to-32\n\n\nFiles\n\n\nAUTHORS\n\n\nCONTRIBUTORS\n\n\nCOPYING\n\n\ncursor.theme\n\n\nicon-theme.cache\n\n\nindex.theme\n\n\nAdwaita-Icon-Theme-Folder.jpg\n\n\n\n\nThe directories contain images and icons with the specified dimensions used as the folder names (in pixels).\n\n\nHowever, \"scalable\" and \"scalable-up-to-32\" contain SVG files. The SVG files in \"scalable-up-to-32\" can be used without issues when used at 32-pixels or below. Within each directory are more folders as listed and described below. Each of these sub-directories may contain SVG, PNG, or XPM files (PNG is recommended).\n\n\nEach file must use a particular name so that the desktop system can find the icon that it needs. Soft-links (shortcuts) are permitted because they allow developers to create one image that can be the icon for many uses (such as using the same image for all types of mount optical disks).\n\n\nTo learn more about the filenames for icons, refer to the naming specification - \nfreedesktop referance page\n\n\n\n\nactions - Icons for actions (such as redo, close, play, etc.) that may be seen in toolbars, menus, buttons, etc.\n\n\nanimations - Images that are used to make animated icons (such as \"loading spinners\" or disc-burning progress)\n\n\napps - Icons for specific applications or for applications of a general type\n\n\ncategories - Icons for various application categories\n\n\ndevices - Icons for devices such as mounted storage media, optical disks, iPods, phones, printers, etc.\n\n\nemblems - Icons for tags and file properties (such as the \"unreadable\" or \"soft-link\" symbol)\n\n\nemotes - Emoticons/Emojis\n\n\nInternational - Icons representing different languages/nations\n\n\nmimetypes (or mimes) - Icons for various mimetypes; these are typically used as the icons for files\n\n\nplaces - Icons for folders, servers, trash-bin, etc.\n\n\nsearch - Images for search-related icons\n\n\nstatus - Icons used for notifications (like \"error\", \"warning\", etc.), battery level, audio volume, network status, etc.\n\n\nstock - Miscellaneous\n\n\nweb - Icons for web-apps (like the web-apps commonly seen in the Unity dashboard)\n\n\n\n\nThe icon images themselves can be made using Gimp (when making PNG files) and Inkscape (when making SVG files). All icon images must be a perfect square. Thus, the \"32x32\" icons must be 32 pixels tall and 32 pixels wide. RGBa is recommended, especially for the transparency layer (alpha-channel).\n\n\nSome icon-themes (like \"Humanity\") use a slightly different format. The \"Humanity\" icon-pack contains folders for each icon context (emotes, devices, places, etc.) and then the different sizes as sub-directories. The sub-directories for each icon size uses the name format \"22\" rather than \"22x22\".\n\n\nThe files in the root of the icon-theme each have a particular purpose as described below.\nAUTHORS - List of authors and possibly their contact information and website\nCONTRIBUTORS - List of people that helped with the project\nCOPYING - The license (such as GPL)\ncursor.theme - Cursor-theme information\nicon-theme.cache - Icon cache that are used as memory mapped files; the files directly map the icons files, thus reducing the time to find a needed icon\nindex.theme - The icon-theme description file; encoded in UTF-8\n\n\nFUN FACT: The \"gtk-update-icon-cache\" command can be used to update/refresh the icon cache files.\n\n\nSample index.theme\nCode:\n\n\n[Icon Theme]\nName=Theme_Name\nName[ca]=Translated_Name\nName[cs]=Translated_Name\nName[da]=Translated_Name\nComment=Theme_Description\nComment[ca]=Translated_Theme_Description\nComment[cs]=Translated_Theme_Description\nComment[da]=Translated_Theme_Description\nInherits=Name_a_Theme_to_use_as_a_Fallback\n\n\n\n\nKDE specific settings\n\n\nDisplayDepth=32\nLinkOverlay=link_overlay\nLockOverlay=lock_overlay\nZipOverlay=zip_overlay\nDesktopDefault=48\nDesktopSizes=16,22,32,48,64,72,96,128\nToolbarDefault=22\nToolbarSizes=16,22,32,48\nMainToolbarDefault=22\nMainToolbarSizes=16,22,32,48\nSmallDefault=16\nSmallSizes=16\nPanelDefault=32\nPanelSizes=16,22,32,48,64,72,96,128\n\n\n\n\nList all directories\n\n\nDirectories=8x8/emblems,16x16/actions,16x16/apps,\n\n\n\n\nSpecify the context, size, and type of each directory\n\n\n[8x8/emblems]\nContext=Emblems\nSize=8\nType=Fixed\nInstalling and Removing Icons\nIcon themes can be installed by placing the icon-pack in one of the proper icon directories. If the icons are placed in \"/usr/share/icons\", then ensure that the owner is \"Root\" and the proper permissions are set so that all users can read the files.\n\n\nTo recursively set the proper permissions and ownership to all folders and files in the icon-pack, execute the below commands. Open a terminal in \"/usr/share/icons\" before executing the commands.\n\n\nCode:\n\n\nchown -R root:root ./THEME_NAME\nfind ./THEME_NAME -type d -exec chmod 755 {} \\;\nfind ./THEME_NAME -type f -exec chmod 644 {} \\;\n\n\n\n\nNOTE: Directories must use \"755\" permissions (drwxr-xr-x) and files must use \"644\" permissions (rw-r--r--). This is better for security while ensuring that users and programs can access the data.\n\n\nTo remove icon themes, delete the icon-pack's directory.\n\n\nObtaining Icons\nIcons can be obtained via the repositories or from various websites.\nGNOME-Look - http://gnome-look.org/index.php?xcontentmode=120x121\nNoobs Lab - http://www.noobslab.com/p/themes-icons.html\n\n\nChanging Icons\nMost theme changers also provide an interface for changing the icons. Such applications include \"Ubuntu Tweak\", \"Unity Tweak Tool\", \"Appearance\", and others.\n\n\nCursors\n\n\nCursors are also found in \"~/.icons\" and \"/usr/share/icons\". Cursor-themes use a similar format. However, the folder contains a \"cursors\" directory and two files - \"cursor.theme\" and \"index.theme\". Inside of the \"cursors\" directory are files that are each named after each type of cursor (top_left_corner, help, move, grabbing, etc.).\n\n\nThese files are \"X11 cursor images\" and they have the \"image/x-xcursor\" mimetype. This type of image file contains multiple images. Each contained image is 48, 32, and 24 pixels in height and width; the images support the alpha-layer (transparency/RGBa). Gimp supports X11 cursor images and represents the contained sub-images as different layers. Each layer must be named using the format \"(SIZEpx)_1 (50ms) (replace)\", where \"SIZE\" is the width/height in pixels.\n\n\nAll cursors that are drawn in these images must be in the center of the space (whether the space be 48x48 pixels or some other size).\n\n\nFurther Reading\n\n\nGraphical User Interface (GUI) Reading Guide - http://www.linux.org/threads/gui-reading-guide.6471/\n\n\nIcon Theme Specification - http://www.freedesktop.org/wiki/Specifications/icon-theme-spec/\n\n\nIcon Naming Specification - http://standards.freedesktop.org/icon-naming-spec/icon-naming-spec-latest.html\n\n\nIcon Theme Specification (single page) - http://standards.freedesktop.org/icon-theme-spec/icon-theme-spec-latest.html\n\n\nTango Icon Library - http://tango.freedesktop.org/Tango_Icon_Library\n\n\nTango Icon Theme Guidelines - http://tango.freedesktop.org/Generic_Icon_Theme_Guidelines", 
            "title": "Creating icon theme"
        }, 
        {
            "location": "/creating-icon-theme/#creating-icon-theme", 
            "text": "Not only can Linux users customize the desktop theme, but they can also change the icons. Icon-theme packs are easy to make, install, and obtain. Many Linux users may find it helpful to learn how to change icons, edit them, get more, etc.", 
            "title": "Creating Icon Theme"
        }, 
        {
            "location": "/creating-icon-theme/#icon-location", 
            "text": "Icons may be stored in \"~/.icons\" or \"/usr/share/icons\". Icons that are in \"~/.icons\" are only accessible to the owner of that home folder. While icons in \"/usr/share/icons\" are global-icons that are accessible by all users. \"/usr/share/pixmaps\" contains icons that are installed or used by various applications and software packages.", 
            "title": "Icon Location"
        }, 
        {
            "location": "/creating-icon-theme/#icon-searching", 
            "text": "Applications that are looking for an icon will first look in \"~/.icons\". Next, the application will try \"/usr/share/icons\", and then \"/usr/share/pixmaps\".", 
            "title": "Icon Searching"
        }, 
        {
            "location": "/creating-icon-theme/#icon-theme", 
            "text": "An icon theme has a specific structure/format that must be used to create a usable icon-pack. Inside the icon directories (\"~/.icons\" and \"/usr/share/icons\"), each icon theme has its own folder that is named after the icon-theme. Within the icon-theme's directory are several folders and some important files. For instance, an icon-theme may contain the below listed directories and files.\nDirectories   8x8  16x16  22x22  24x24  32x32  48x48  52x52  128x128  240x240  256x256  512x512  scalable  scalable-up-to-32  Files  AUTHORS  CONTRIBUTORS  COPYING  cursor.theme  icon-theme.cache  index.theme  Adwaita-Icon-Theme-Folder.jpg   The directories contain images and icons with the specified dimensions used as the folder names (in pixels).  However, \"scalable\" and \"scalable-up-to-32\" contain SVG files. The SVG files in \"scalable-up-to-32\" can be used without issues when used at 32-pixels or below. Within each directory are more folders as listed and described below. Each of these sub-directories may contain SVG, PNG, or XPM files (PNG is recommended).  Each file must use a particular name so that the desktop system can find the icon that it needs. Soft-links (shortcuts) are permitted because they allow developers to create one image that can be the icon for many uses (such as using the same image for all types of mount optical disks).  To learn more about the filenames for icons, refer to the naming specification -  freedesktop referance page   actions - Icons for actions (such as redo, close, play, etc.) that may be seen in toolbars, menus, buttons, etc.  animations - Images that are used to make animated icons (such as \"loading spinners\" or disc-burning progress)  apps - Icons for specific applications or for applications of a general type  categories - Icons for various application categories  devices - Icons for devices such as mounted storage media, optical disks, iPods, phones, printers, etc.  emblems - Icons for tags and file properties (such as the \"unreadable\" or \"soft-link\" symbol)  emotes - Emoticons/Emojis  International - Icons representing different languages/nations  mimetypes (or mimes) - Icons for various mimetypes; these are typically used as the icons for files  places - Icons for folders, servers, trash-bin, etc.  search - Images for search-related icons  status - Icons used for notifications (like \"error\", \"warning\", etc.), battery level, audio volume, network status, etc.  stock - Miscellaneous  web - Icons for web-apps (like the web-apps commonly seen in the Unity dashboard)   The icon images themselves can be made using Gimp (when making PNG files) and Inkscape (when making SVG files). All icon images must be a perfect square. Thus, the \"32x32\" icons must be 32 pixels tall and 32 pixels wide. RGBa is recommended, especially for the transparency layer (alpha-channel).  Some icon-themes (like \"Humanity\") use a slightly different format. The \"Humanity\" icon-pack contains folders for each icon context (emotes, devices, places, etc.) and then the different sizes as sub-directories. The sub-directories for each icon size uses the name format \"22\" rather than \"22x22\".  The files in the root of the icon-theme each have a particular purpose as described below.\nAUTHORS - List of authors and possibly their contact information and website\nCONTRIBUTORS - List of people that helped with the project\nCOPYING - The license (such as GPL)\ncursor.theme - Cursor-theme information\nicon-theme.cache - Icon cache that are used as memory mapped files; the files directly map the icons files, thus reducing the time to find a needed icon\nindex.theme - The icon-theme description file; encoded in UTF-8  FUN FACT: The \"gtk-update-icon-cache\" command can be used to update/refresh the icon cache files.  Sample index.theme\nCode:  [Icon Theme]\nName=Theme_Name\nName[ca]=Translated_Name\nName[cs]=Translated_Name\nName[da]=Translated_Name\nComment=Theme_Description\nComment[ca]=Translated_Theme_Description\nComment[cs]=Translated_Theme_Description\nComment[da]=Translated_Theme_Description\nInherits=Name_a_Theme_to_use_as_a_Fallback", 
            "title": "Icon Theme"
        }, 
        {
            "location": "/creating-icon-theme/#kde-specific-settings", 
            "text": "DisplayDepth=32\nLinkOverlay=link_overlay\nLockOverlay=lock_overlay\nZipOverlay=zip_overlay\nDesktopDefault=48\nDesktopSizes=16,22,32,48,64,72,96,128\nToolbarDefault=22\nToolbarSizes=16,22,32,48\nMainToolbarDefault=22\nMainToolbarSizes=16,22,32,48\nSmallDefault=16\nSmallSizes=16\nPanelDefault=32\nPanelSizes=16,22,32,48,64,72,96,128", 
            "title": "KDE specific settings"
        }, 
        {
            "location": "/creating-icon-theme/#list-all-directories", 
            "text": "Directories=8x8/emblems,16x16/actions,16x16/apps,", 
            "title": "List all directories"
        }, 
        {
            "location": "/creating-icon-theme/#specify-the-context-size-and-type-of-each-directory", 
            "text": "[8x8/emblems]\nContext=Emblems\nSize=8\nType=Fixed\nInstalling and Removing Icons\nIcon themes can be installed by placing the icon-pack in one of the proper icon directories. If the icons are placed in \"/usr/share/icons\", then ensure that the owner is \"Root\" and the proper permissions are set so that all users can read the files.  To recursively set the proper permissions and ownership to all folders and files in the icon-pack, execute the below commands. Open a terminal in \"/usr/share/icons\" before executing the commands.  Code:  chown -R root:root ./THEME_NAME\nfind ./THEME_NAME -type d -exec chmod 755 {} \\;\nfind ./THEME_NAME -type f -exec chmod 644 {} \\;  NOTE: Directories must use \"755\" permissions (drwxr-xr-x) and files must use \"644\" permissions (rw-r--r--). This is better for security while ensuring that users and programs can access the data.  To remove icon themes, delete the icon-pack's directory.  Obtaining Icons\nIcons can be obtained via the repositories or from various websites.\nGNOME-Look - http://gnome-look.org/index.php?xcontentmode=120x121\nNoobs Lab - http://www.noobslab.com/p/themes-icons.html  Changing Icons\nMost theme changers also provide an interface for changing the icons. Such applications include \"Ubuntu Tweak\", \"Unity Tweak Tool\", \"Appearance\", and others.", 
            "title": "Specify the context, size, and type of each directory"
        }, 
        {
            "location": "/creating-icon-theme/#cursors", 
            "text": "Cursors are also found in \"~/.icons\" and \"/usr/share/icons\". Cursor-themes use a similar format. However, the folder contains a \"cursors\" directory and two files - \"cursor.theme\" and \"index.theme\". Inside of the \"cursors\" directory are files that are each named after each type of cursor (top_left_corner, help, move, grabbing, etc.).  These files are \"X11 cursor images\" and they have the \"image/x-xcursor\" mimetype. This type of image file contains multiple images. Each contained image is 48, 32, and 24 pixels in height and width; the images support the alpha-layer (transparency/RGBa). Gimp supports X11 cursor images and represents the contained sub-images as different layers. Each layer must be named using the format \"(SIZEpx)_1 (50ms) (replace)\", where \"SIZE\" is the width/height in pixels.  All cursors that are drawn in these images must be in the center of the space (whether the space be 48x48 pixels or some other size).", 
            "title": "Cursors"
        }, 
        {
            "location": "/creating-icon-theme/#further-reading", 
            "text": "Graphical User Interface (GUI) Reading Guide - http://www.linux.org/threads/gui-reading-guide.6471/  Icon Theme Specification - http://www.freedesktop.org/wiki/Specifications/icon-theme-spec/  Icon Naming Specification - http://standards.freedesktop.org/icon-naming-spec/icon-naming-spec-latest.html  Icon Theme Specification (single page) - http://standards.freedesktop.org/icon-theme-spec/icon-theme-spec-latest.html  Tango Icon Library - http://tango.freedesktop.org/Tango_Icon_Library  Tango Icon Theme Guidelines - http://tango.freedesktop.org/Generic_Icon_Theme_Guidelines", 
            "title": "Further Reading"
        }
    ]
}